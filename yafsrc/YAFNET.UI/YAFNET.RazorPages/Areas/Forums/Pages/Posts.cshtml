@page "{t:int?}/{name}/{handler?}"

@using YAF.Core.Extensions
@using YAF.Core.Helpers
@using YAF.Core.Utilities
@using YAF.Web.HtmlHelpers
@using YAF.Types.Constants
@using YAF.Types.Extensions
@using YAF.Types.Interfaces
@using YAF.Types.Interfaces.Services
@using YAF.Types.Modals

@model PostsModel

@{
    var showQuickReply = Model.PageBoardContext.BoardSettings.ShowQuickAnswer && Model.PageBoardContext.ForumReplyAccess && ((!Model.PageBoardContext.PageTopic.TopicFlags.IsLocked && !Model.PageBoardContext.PageForum.ForumFlags.IsLocked)
                                                                                                                             || Model.PageBoardContext.ForumModeratorAccess);

    var selectForumsLoadJs = JavaScriptBlocks.SelectForumsLoadJs(
	    "ForumList",
	    Model.GetText("SELECT_FORUM"),
	    false,
	    false,
	    "ForumListSelected");

    var editorJs = showQuickReply
	    ? JavaScriptBlocks.CreateEditorJs(
		    "QuickReplyEditor",
		    Model.GetText("COMMON", "TT_URL_TITLE"),
		    Model.GetText("COMMON", "TT_URL_DESC"),
		    Model.GetText("COMMON", "TT_IMAGE_TITLE"),
		    Model.GetText("COMMON", "TT_IMAGE_DESC"),
		    Model.GetText("COMMON", "TT_DESCRIPTION"),
		    Model.GetText("COMMON", "TT_MEDIA"),
		    Model.GetText("COMMON", "TT_NOTE"),
            Model.GetText("COMMON", "TT_NOTE_TYPE"))
	    : string.Empty;
}

@if (Model.PageBoardContext.PageTopic.PollID.HasValue)
{
    @await Html.PartialAsync("_PollList", Model)
}

<form method="post">
<div class="row justify-content-end">
    <div class="col-auto">
        @if (Model.PageBoardContext.ForumModeratorAccess)
        {
            <button button-style="Danger"
                    bs-toggle="dropdown"
                    class="dropdown-toggle me-1 mb-1"
                    icon="cogs"
                    text-localized-page="POSTS"
                    text-localized-tag="MANAGE_TOPIC"></button>
            <div class="dropdown-menu dropdown-menu-end">
                <button class="dropdown-item"
                        button-style="None"
                        bs-toggle="ajax-modal"
                        bs-target-url="@Url.Page("Posts", "MoveTopic", new { name = Request.GetQueryOrRouteValue<string>("name"), t = Request.GetQueryOrRouteValue<int>("t"), p =  Request.Query["p"], m = Request.Query["m"]})"
                        text-localized-tag="BUTTON_MOVETOPIC" title-localized-tag="BUTTON_MOVETOPIC_TT"
                        Icon="arrows-alt"></button>

                @if (Model.PageBoardContext.PageTopic.TopicFlags.IsLocked)
                {
                    <button button-style="None"
                            class="dropdown-item"
                            asp-page-handler="UnlockTopic" 
                            asp-page="@ForumPages.Posts.GetPageName()"
                            asp-route-name="@(UrlRewriteHelper.CleanStringForUrl(Request.GetQueryOrRouteValue<string>("name")))"
                            asp-route-t="@(Request.GetQueryOrRouteValue<int>("t"))"
                            asp-route-p="@Request.Query["p"]"
                            asp-route-m="@Request.Query["m"]"
                            text-localized-tag="BUTTON_UNLOCKTOPIC" title-localized-tag="BUTTON_UNLOCKTOPIC_TT"
                            icon="lock-open"></button>
                }
                else
                {
                    <button button-style="None"
                            class="dropdown-item"
                            asp-page-handler="LockTopic"
                            asp-page="@ForumPages.Posts.GetPageName()"
                            asp-route-name="@(UrlRewriteHelper.CleanStringForUrl(Request.GetQueryOrRouteValue<string>("name")))"
                            asp-route-t="@(Request.GetQueryOrRouteValue<int>("t"))"
                            asp-route-p="@Request.Query["p"]"
                            asp-route-m="@Request.Query["m"]"
                            text-localized-tag="BUTTON_LOCKTOPIC" title-localized-tag="BUTTON_LOCKTOPIC_TT"
                            icon="lock"></button>
                }

                <button button-style="None"
                        class="dropdown-item"
                        asp-page-handler="DeleteTopic" 
                        asp-page="@ForumPages.Posts.GetPageName()"
                        asp-route-name="@(UrlRewriteHelper.CleanStringForUrl(Request.GetQueryOrRouteValue<string>("name")))"
                        asp-route-t="@(Request.GetQueryOrRouteValue<int>("t"))"
                        asp-route-p="@Request.Query["p"]"
                        asp-route-m="@Request.Query["m"]"
                        return-confirm-tag="confirm_deletetopic"
                        text-localized-tag="BUTTON_DELETETOPIC" title-localized-tag="BUTTON_DELETETOPIC_TT"
                        icon="trash"></button>
            </div>
        }
            
        @if (Model.PageBoardContext.ForumPostAccess || Model.PageBoardContext.PageForum.ForumFlags.IsLocked && Model.PageBoardContext.ForumModeratorAccess)
        {
            <a button-style="Secondary"
               text-localized-tag="BUTTON_NEWTOPIC" title-localized-tag="BUTTON_NEWTOPIC_TT"
               class="me-1 mb-1"
               href="@(Model.Get<ILinkBuilder>().GetLink(ForumPages.PostTopic, new { f = Model.PageBoardContext.PageForumID }))"
               icon="plus"></a>
        }

        @if (Model.PageBoardContext.ForumReplyAccess && ((!Model.PageBoardContext.PageTopic.TopicFlags.IsLocked && !Model.PageBoardContext.PageForum.ForumFlags.IsLocked)
                                                         || Model.PageBoardContext.ForumModeratorAccess))
        {
            <button button-style="Primary"
                    class="me-1 mb-1"
                    asp-page-handler="ReplyLink" 
                    asp-page="@ForumPages.Posts.GetPageName()"
                    asp-route-name="@(UrlRewriteHelper.CleanStringForUrl(Request.GetQueryOrRouteValue<string>("name")))"
                    asp-route-t="@(Request.GetQueryOrRouteValue<int>("t"))"
                    asp-route-p="@Request.Query["p"]"
                    asp-route-m="@Request.Query["m"]"
                    text-localized-tag="BUTTON_POSTREPLY" title-localized-tag="BUTTON_POSTREPLY_TT"
                    icon="reply"></button>
        }
    </div>
</div>


<div class="row mb-3">
	<div class="col">
            <nav class="navbar navbar-expand-lg bg-light-subtle">
			<div class="container-fluid">
				<a href="@Html.Raw(Model.Get<ILinkBuilder>().GetTopicLink(Model.PageBoardContext.PageTopic))" class="navbar-brand pt-0 text-wrap"
				   title="@Html.Raw(Model.Get<IBadWordReplace>().Replace(Html.HtmlEncode(Model.PageBoardContext.PageTopic.Description)))">
					@Html.Raw(Model.TopicSubject)
				</a>
				<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
					<span class="navbar-toggler-icon"></span>
				</button>
				<div class="collapse navbar-collapse" id="navbarNav">
					<ul class="navbar-nav">
						<li class="nav-item">
							<button button-style="Link"
							        asp-page-handler="PrevTopic" 
							        asp-page="@ForumPages.Posts.GetPageName()"
							        asp-route-name="@(UrlRewriteHelper.CleanStringForUrl(Request.GetQueryOrRouteValue<string>("name")))"
							        asp-route-t="@(Request.GetQueryOrRouteValue<int>("t"))"
							        asp-route-p="@Request.Query["p"]"
							        asp-route-m="@Request.Query["m"]"
							        text-localized-tag="PREVTOPIC"
							        title-localized-tag="PREVTOPIC"
							        icon="arrow-circle-left"></button>
						</li>
						<li class="nav-item">
							<button ID="NextTopic"
							        button-style="Link"
							        asp-page-handler="NextTopic" 
							        asp-page="@ForumPages.Posts.GetPageName()"
							        asp-route-name="@(UrlRewriteHelper.CleanStringForUrl(Request.GetQueryOrRouteValue<string>("name")))"
							        asp-route-t="@(Request.GetQueryOrRouteValue<int>("t"))"
							        asp-route-p="@Request.Query["p"]"
							        asp-route-m="@Request.Query["m"]"
							        text-localized-tag="NEXTTOPIC"
							        title-localized-tag="NEXTTOPIC"
							        icon="arrow-circle-right"></button>
						</li>
					</ul>
					<ul class="navbar-nav ms-auto">
						<li class="nav-item dropdown">
							@if (Model.Get<IPermissions>().Check(Model.PageBoardContext.BoardSettings.ShowShareTopicTo))
							{
								var topicUrl = Model.Get<ILinkBuilder>().GetAbsoluteLink(
									ForumPages.Posts,
									new { t = Model.PageBoardContext.PageTopicID, name = this.Model.PageBoardContext.PageTopic.TopicName });

								<button text-localized-tag="SHARE" title-localized-tag="SHARE_TOOLTIP"
								        Icon="share-alt"
								        button-style="Link"
								        class="dropdown-toggle"
								        bs-toggle="dropdown"></button>

								<div class="dropdown-menu dropdown-menu-end">

									@if (Model.PageBoardContext.BoardSettings.AllowEmailTopic)
									{
										<button text-localized-tag="EMAILTOPIC"
										        text-localized-page="POSTS"
										        icon="paper-plane"
										        button-style="None"
										        class="dropdown-item"
										        asp-page-handler="EmailTopic" 
										        asp-page="@ForumPages.Posts.GetPageName()"
										        asp-route-name="@(UrlRewriteHelper.CleanStringForUrl(Request.GetQueryOrRouteValue<string>("name")))"
										        asp-route-t="@(Request.GetQueryOrRouteValue<int>("t"))"
										        asp-route-p="@Request.Query["p"]"
										        asp-route-m="@Request.Query["m"]"></button>
									}
                                        
									<a text-localized-tag="LINKBACK_TOPIC"
									   icon="link"
									   button-style="None"
									   class="dropdown-item"
									   onclick="@(JavaScriptBlocks.BootBoxPromptJs(
											            Model.GetText("LINKBACK_TOPIC"),
											            Model.GetText("LINKBACK_TOPIC_PROMT"),
											            Model.GetText("CANCEL"),
											            Model.GetText("COPY_TO_CLIPBOARD"),
											            topicUrl))"></a>
								</div>
							}
                               
						</li>
						<li class="nav-item dropdown">
							<button text-localized-tag="TOOLS" title-localized-tag="OPTIONS_TOOLTIP"
							        icon="cog"
							        button-style="Link"
							        class="dropdown-toggle"
							        bs-toggle="dropdown"></button>
							<div class="dropdown-menu dropdown-menu-end">
                                    
								@if (!Model.PageBoardContext.IsGuest)
								{
									var isWatched = await Model.HandleWatchTopicAsync();

									if (isWatched)
									{
										<button text-localized-tag="UNWATCHTOPIC"
										        icon="eye-slash"
										        button-style="None"
										        class="dropdown-item"
										        asp-page-handler="UnTrackTopic" 
										        asp-page="@ForumPages.Posts.GetPageName()"
										        asp-route-name="@(UrlRewriteHelper.CleanStringForUrl(Request.GetQueryOrRouteValue<string>("name")))"
										        asp-route-t="@(Request.GetQueryOrRouteValue<int>("t"))"
										        asp-route-p="@Request.Query["p"]"
										        asp-route-m="@Request.Query["m"]"></button>
									}
									else
									{
										<button text-localized-tag="WATCHTOPIC"
										        icon="eye"
										        button-style="None"
										        class="dropdown-item"
										        asp-page-handler="TrackTopic" 
										        asp-page="@ForumPages.Posts.GetPageName()"
										        asp-route-name="@(UrlRewriteHelper.CleanStringForUrl(Request.GetQueryOrRouteValue<string>("name")))"
										        asp-route-t="@(Request.GetQueryOrRouteValue<int>("t"))"
										        asp-route-p="@Request.Query["p"]"
										        asp-route-m="@Request.Query["m"]"></button>
									}
								}
                                    
								<a text-localized-tag="PRINTTOPIC" text-localized-page="POSTS"
								   icon="print"
								   button-style="None"
								   class="dropdown-item"
								   href="@(Model.Get<ILinkBuilder>().GetLink(ForumPages.PrintTopic, new { t = Model.PageBoardContext.PageTopicID }))"></a>

								@if (Model.PageBoardContext.BoardSettings.ShowAtomLink && Model.Get<IPermissions>().Check(Model.PageBoardContext.BoardSettings.PostsFeedAccess))
								{
									<a text-localized-tag="ATOMTOPIC" text-localized-page="POSTS"
									   icon="rss"
									   button-style="None"
									   class="dropdown-item"
									   href="@(Model.Get<IUrlHelper>().Action("GetPostsFeed", "Feed",new {t = Model.PageBoardContext.PageTopicID}))"></a>
								}

							</div>
						</li>
					</ul>
				</div>
			</div>
		</nav>
	</div>
</div>
</form>

@for (var index = 0; index < Model.Messages.Count; index++)
{
    @await Html.PartialAsync("_DisplayPost",  Model.Messages[index], new ViewDataDictionary(ViewData){ {"index", index}})

    if (index == 0 && Model.PageBoardContext.PageIndex == 0)
    {
        if (Model.PageBoardContext.IsGuest && Model.PageBoardContext.BoardSettings.ShowConnectMessageInTopic)
        {
            @await Html.PartialAsync("_DisplayConnect")
        }

        // check if need to display the ad...
        if (Model.PageBoardContext.BoardSettings.AdPost.IsSet() && (Model.PageBoardContext.IsGuest || Model.PageBoardContext.BoardSettings.ShowAdsToSignedInUsers))
        {
            @await Html.PartialAsync("_DisplayAd")
        }
    }
}

@if (showQuickReply)
{
	<div class="row mb-3">
		<div class="col">
			<hr class="border border-secondary border-2 opacity-50">
			@await Html.PartialAsync("_QuickReply", new QuickReplyModal())
		</div>
	</div>
}

@if (Model.Get<IPermissions>().Check(Model.PageBoardContext.BoardSettings.PostsFeedAccess))
{
    <div class="row mb-3">
        <div class="col">
            @Html.RssFeedLink(RssFeeds.Posts, true)
        </div>
    </div>
}

<form method="post">
    <div class="row mb-3 d-flex justify-content-between">
    <div class="col-md-4">
	    <pager page-size="@Model.Size" use-submit="false"
               count="Model.Messages.NullOrEmpty() ? 0 : Model.Messages.FirstOrDefault().TotalRows">
        </pager>
    </div>
    <div class="col-md-8 mt-1 mt-md-0">
        <div class="d-flex justify-content-end flex-wrap">
            @if (Model.PageBoardContext.ForumModeratorAccess)
            {
                <button button-style="Danger"
                        bs-toggle="dropdown"
                        class="dropdown-toggle me-1 mb-1"
                        icon="cogs"
                        text-localized-page="POSTS"
                        text-localized-tag="MANAGE_TOPIC"></button>
                <div class="dropdown-menu dropdown-menu-end">
                    <button button-style="None"
                            class="dropdown-item"
                            bs-toggle="ajax-modal"
                            bs-target-url="@Url.Page("Posts", "MoveTopic", new { name = Request.GetQueryOrRouteValue<string>("name"), t = Request.GetQueryOrRouteValue<int>("t"), p =  Request.Query["p"], m = Request.Query["m"]})"
                            text-localized-tag="BUTTON_MOVETOPIC" title-localized-tag="BUTTON_MOVETOPIC_TT"
                            icon="arrows-alt"></button>
                    @if (Model.PageBoardContext.PageTopic.TopicFlags.IsLocked)
                    {
                        <button button-style="None"
                                class="dropdown-item"
                                asp-page-handler="UnlockTopic" 
                                asp-page="@ForumPages.Posts.GetPageName()"
                                asp-route-name="@(UrlRewriteHelper.CleanStringForUrl(Request.GetQueryOrRouteValue<string>("name")))"
                                asp-route-t="@(Request.GetQueryOrRouteValue<int>("t"))"
                                asp-route-p="@Request.Query["p"]"
                                asp-route-m="@Request.Query["m"]"
                                text-localized-tag="BUTTON_UNLOCKTOPIC" title-localized-tag="BUTTON_UNLOCKTOPIC_TT"
                                icon="lock-open"></button>
                    }
                    else
                    {
                        <button button-style="None"
                                class="dropdown-item"
                                asp-page-handler="LockTopic" 
                                asp-page="@ForumPages.Posts.GetPageName()"
                                asp-route-name="@(UrlRewriteHelper.CleanStringForUrl(Request.GetQueryOrRouteValue<string>("name")))"
                                asp-route-t="@(Request.GetQueryOrRouteValue<int>("t"))"
                                asp-route-p="@Request.Query["p"]"
                                asp-route-m="@Request.Query["m"]"
                                text-localized-tag="BUTTON_LOCKTOPIC" title-localized-tag="BUTTON_LOCKTOPIC_TT"
                                icon="lock"></button>
                    }

                    <button button-style="None"
                            class="dropdown-item"
                            asp-page-handler="DeleteTopic"
                            asp-page="@ForumPages.Posts.GetPageName()"
                            asp-route-name="@(UrlRewriteHelper.CleanStringForUrl(Request.GetQueryOrRouteValue<string>("name")))"
                            asp-route-t="@(Request.GetQueryOrRouteValue<int>("t"))"
                            asp-route-p="@Request.Query["p"]"
                            asp-route-m="@Request.Query["m"]"
                            return-confirm-tag="confirm_deletetopic"
                            text-localized-tag="BUTTON_DELETETOPIC" title-localized-tag="BUTTON_DELETETOPIC_TT"
                            icon="trash"></button>
                </div>
            }

            @if (Model.PageBoardContext.ForumPostAccess || Model.PageBoardContext.PageForum.ForumFlags.IsLocked && Model.PageBoardContext.ForumModeratorAccess)
            {
                <a button-style="Secondary"
                   text-localized-tag="BUTTON_NEWTOPIC" title-localized-tag="BUTTON_NEWTOPIC_TT"
                   class="me-1 mb-1"
                   href="@(Model.Get<ILinkBuilder>().GetLink(ForumPages.PostTopic, new { f = Model.PageBoardContext.PageForumID }))"
                   icon="plus"></a>
            }
            
            @if (Model.PageBoardContext.ForumReplyAccess && ((!Model.PageBoardContext.PageTopic.TopicFlags.IsLocked && !Model.PageBoardContext.PageForum.ForumFlags.IsLocked)
                                                             || Model.PageBoardContext.ForumModeratorAccess))
            {
                <button button-style="Primary"
                        class="me-1 mb-1"
                        asp-page-handler="ReplyLink" 
                        asp-page="@ForumPages.Posts.GetPageName()"
                        asp-route-name="@(UrlRewriteHelper.CleanStringForUrl(Request.GetQueryOrRouteValue<string>("name")))"
                        asp-route-t="@(Request.GetQueryOrRouteValue<int>("t"))"
                        asp-route-p="@Request.Query["p"]"
                        asp-route-m="@Request.Query["m"]"
                        text-localized-tag="BUTTON_POSTREPLY" title-localized-tag="BUTTON_POSTREPLY_TT"
                        icon="reply"></button>
            }
        </div>
    </div>
</div>
</form>

@await Html.PartialAsync("_TopicTags")

<div class="row mb-3">
    @if (Model.PageBoardContext.BoardSettings.ShowSimilarTopics)
    {
        @await Html.PartialAsync("_SimilarTopics")
    }
    
    @if (Model.PageBoardContext.BoardSettings.ShowBrowsingUsers)
    {
        <div class="col">
            @await Html.PartialAsync("_TopicPageUsers")
        </div>
    }

</div>

@section Scripts {
    @await Html.PartialAsync("_PostScriptsPartial")
	@if (showQuickReply)
	{
		@await Html.PartialAsync("_EditorScriptsPartial")
	}
    <script type="module">
        @Html.Raw(JsAndCssHelper.CompressJavaScript(JavaScriptBlocks.ForumModsPopoverJs(
            $"<i class=\"fa fa-user-secret text-secondary\"></i>&nbsp;{Model.Get<ILocalization>().GetText("DEFAULT", "MODERATORS")} ...")))

        @Html.Raw(JsAndCssHelper.CompressJavaScript(JavaScriptBlocks.TopicLinkPopoverJs(
            $"{Model.Get<ILocalization>().GetText("TOPIC_STARTER")}&nbsp;...",
            ".topic-starter-popover",
            "hover")))

        @Html.Raw(JsAndCssHelper.CompressJavaScript(
            JavaScriptBlocks.TopicLinkPopoverJs(
                $"{Model.Get<ILocalization>().GetText("LASTPOST")}&nbsp;{Model.Get<ILocalization>().GetText("SEARCH", "BY")} ...",
                ".topic-link-popover",
                "focus hover")))

        @Html.Raw(JsAndCssHelper.CompressJavaScript(
            JavaScriptBlocks.ForumIconLegendPopoverJs(
                (await Html.PartialAsync("_TopicIconLegend")).RenderToString().ToJsString(),
                "topic-icon-legend-popvover")))

        @Html.Raw(JsAndCssHelper.CompressJavaScript(
            JavaScriptBlocks.ForumIconLegendPopoverJs(
                (await Html.PartialAsync("_ForumIconLegend")).RenderToString().ToJsString(),
                "forum-icon-legend-popvover")))

        @Html.Raw(JsAndCssHelper.CompressJavaScript(JavaScriptBlocks.ModalNotifyJs()));

        @Html.Raw(JsAndCssHelper.CompressJavaScript(JavaScriptBlocks.DialogFunctionsJs(selectForumsLoadJs + editorJs)))
    </script>
}