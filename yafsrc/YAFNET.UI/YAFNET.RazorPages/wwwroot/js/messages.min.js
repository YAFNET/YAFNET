/*! Yet Another Forum.NET v4.0.2 | Â© Ingo Herbote | https://www.yetanotherforum.net/ */

(()=>{"use strict";var e={"./node_modules/@microsoft/signalr/dist/esm/AbortController.js":(e,t,o)=>{o.r(t),o.d(t,{AbortController:()=>s});class s{constructor(){this._isAborted=!1,this.onabort=null}abort(){this._isAborted||(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}}},"./node_modules/@microsoft/signalr/dist/esm/AccessTokenHttpClient.js":(e,t,o)=>{o.r(t),o.d(t,{AccessTokenHttpClient:()=>r});var s=o("./node_modules/@microsoft/signalr/dist/esm/HeaderNames.js"),n=o("./node_modules/@microsoft/signalr/dist/esm/HttpClient.js");class r extends n.HttpClient{constructor(e,t){super(),this._innerClient=e,this._accessTokenFactory=t}async send(e){let t=!0;this._accessTokenFactory&&(!this._accessToken||e.url&&e.url.indexOf("/negotiate?")>0)&&(t=!1,this._accessToken=await this._accessTokenFactory()),this._setAuthorizationHeader(e);const o=await this._innerClient.send(e);return t&&401===o.statusCode&&this._accessTokenFactory?(this._accessToken=await this._accessTokenFactory(),this._setAuthorizationHeader(e),await this._innerClient.send(e)):o}_setAuthorizationHeader(e){e.headers||(e.headers={}),this._accessToken?e.headers[s.HeaderNames.Authorization]=`Bearer ${this._accessToken}`:this._accessTokenFactory&&e.headers[s.HeaderNames.Authorization]&&delete e.headers[s.HeaderNames.Authorization]}getCookieString(e){return this._innerClient.getCookieString(e)}}},"./node_modules/@microsoft/signalr/dist/esm/DefaultHttpClient.js":(e,t,o)=>{o.r(t),o.d(t,{DefaultHttpClient:()=>c});var s=o("./node_modules/@microsoft/signalr/dist/esm/Errors.js"),n=o("./node_modules/@microsoft/signalr/dist/esm/FetchHttpClient.js"),r=o("./node_modules/@microsoft/signalr/dist/esm/HttpClient.js"),i=o("./node_modules/@microsoft/signalr/dist/esm/Utils.js"),a=o("./node_modules/@microsoft/signalr/dist/esm/XhrHttpClient.js");class c extends r.HttpClient{constructor(e){if(super(),"undefined"!=typeof fetch||i.Platform.isNode)this._httpClient=new n.FetchHttpClient(e);else{if("undefined"==typeof XMLHttpRequest)throw new Error("No usable HttpClient found.");this._httpClient=new a.XhrHttpClient(e)}}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new s.AbortError):e.method?e.url?this._httpClient.send(e):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(e){return this._httpClient.getCookieString(e)}}},"./node_modules/@microsoft/signalr/dist/esm/DefaultReconnectPolicy.js":(e,t,o)=>{o.r(t),o.d(t,{DefaultReconnectPolicy:()=>n});const s=[0,2e3,1e4,3e4,null];class n{constructor(e){this._retryDelays=void 0!==e?[...e,null]:s}nextRetryDelayInMilliseconds(e){return this._retryDelays[e.previousRetryCount]}}},"./node_modules/@microsoft/signalr/dist/esm/Errors.js":(e,t,o)=>{o.r(t),o.d(t,{AbortError:()=>r,AggregateErrors:()=>h,DisabledTransportError:()=>a,FailedToNegotiateWithServerError:()=>l,FailedToStartTransportError:()=>c,HttpError:()=>s,TimeoutError:()=>n,UnsupportedTransportError:()=>i});class s extends Error{constructor(e,t){const o=new.target.prototype;super(`${e}: Status code '${t}'`),this.statusCode=t,this.__proto__=o}}class n extends Error{constructor(e="A timeout occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class r extends Error{constructor(e="An abort occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class i extends Error{constructor(e,t){const o=new.target.prototype;super(e),this.transport=t,this.errorType="UnsupportedTransportError",this.__proto__=o}}class a extends Error{constructor(e,t){const o=new.target.prototype;super(e),this.transport=t,this.errorType="DisabledTransportError",this.__proto__=o}}class c extends Error{constructor(e,t){const o=new.target.prototype;super(e),this.transport=t,this.errorType="FailedToStartTransportError",this.__proto__=o}}class l extends Error{constructor(e){const t=new.target.prototype;super(e),this.errorType="FailedToNegotiateWithServerError",this.__proto__=t}}class h extends Error{constructor(e,t){const o=new.target.prototype;super(e),this.innerErrors=t,this.__proto__=o}}},"./node_modules/@microsoft/signalr/dist/esm/FetchHttpClient.js":(e,t,o)=>{o.r(t),o.d(t,{FetchHttpClient:()=>a});var s=o("./node_modules/@microsoft/signalr/dist/esm/Errors.js"),n=o("./node_modules/@microsoft/signalr/dist/esm/HttpClient.js"),r=o("./node_modules/@microsoft/signalr/dist/esm/ILogger.js"),i=o("./node_modules/@microsoft/signalr/dist/esm/Utils.js");class a extends n.HttpClient{constructor(e){if(super(),this._logger=e,"undefined"==typeof fetch||i.Platform.isNode){const e=require;this._jar=new(e("tough-cookie").CookieJar),"undefined"==typeof fetch?this._fetchType=e("node-fetch"):this._fetchType=fetch,this._fetchType=e("fetch-cookie")(this._fetchType,this._jar)}else this._fetchType=fetch.bind((0,i.getGlobalThis)());if("undefined"==typeof AbortController){const e=require;this._abortControllerType=e("abort-controller")}else this._abortControllerType=AbortController}async send(e){if(e.abortSignal&&e.abortSignal.aborted)throw new s.AbortError;if(!e.method)throw new Error("No method defined.");if(!e.url)throw new Error("No url defined.");const t=new this._abortControllerType;let o;e.abortSignal&&(e.abortSignal.onabort=()=>{t.abort(),o=new s.AbortError});let a,l=null;if(e.timeout){const n=e.timeout;l=setTimeout((()=>{t.abort(),this._logger.log(r.LogLevel.Warning,"Timeout from HTTP request."),o=new s.TimeoutError}),n)}""===e.content&&(e.content=void 0),e.content&&(e.headers=e.headers||{},(0,i.isArrayBuffer)(e.content)?e.headers["Content-Type"]="application/octet-stream":e.headers["Content-Type"]="text/plain;charset=UTF-8");try{a=await this._fetchType(e.url,{body:e.content,cache:"no-cache",credentials:!0===e.withCredentials?"include":"same-origin",headers:{"X-Requested-With":"XMLHttpRequest",...e.headers},method:e.method,mode:"cors",redirect:"follow",signal:t.signal})}catch(e){if(o)throw o;throw this._logger.log(r.LogLevel.Warning,`Error from HTTP request. ${e}.`),e}finally{l&&clearTimeout(l),e.abortSignal&&(e.abortSignal.onabort=null)}if(!a.ok){const e=await c(a,"text");throw new s.HttpError(e||a.statusText,a.status)}const h=c(a,e.responseType),d=await h;return new n.HttpResponse(a.status,a.statusText,d)}getCookieString(e){let t="";return i.Platform.isNode&&this._jar&&this._jar.getCookies(e,((e,o)=>t=o.join("; "))),t}}function c(e,t){let o;switch(t){case"arraybuffer":o=e.arrayBuffer();break;case"text":default:o=e.text();break;case"blob":case"document":case"json":throw new Error(`${t} is not supported.`)}return o}},"./node_modules/@microsoft/signalr/dist/esm/HandshakeProtocol.js":(e,t,o)=>{o.r(t),o.d(t,{HandshakeProtocol:()=>r});var s=o("./node_modules/@microsoft/signalr/dist/esm/TextMessageFormat.js"),n=o("./node_modules/@microsoft/signalr/dist/esm/Utils.js");class r{writeHandshakeRequest(e){return s.TextMessageFormat.write(JSON.stringify(e))}parseHandshakeResponse(e){let t,o;if((0,n.isArrayBuffer)(e)){const n=new Uint8Array(e),r=n.indexOf(s.TextMessageFormat.RecordSeparatorCode);if(-1===r)throw new Error("Message is incomplete.");const i=r+1;t=String.fromCharCode.apply(null,Array.prototype.slice.call(n.slice(0,i))),o=n.byteLength>i?n.slice(i).buffer:null}else{const n=e,r=n.indexOf(s.TextMessageFormat.RecordSeparator);if(-1===r)throw new Error("Message is incomplete.");const i=r+1;t=n.substring(0,i),o=n.length>i?n.substring(i):null}const r=s.TextMessageFormat.parse(t),i=JSON.parse(r[0]);if(i.type)throw new Error("Expected a handshake response from the server.");return[o,i]}}},"./node_modules/@microsoft/signalr/dist/esm/HeaderNames.js":(e,t,o)=>{o.r(t),o.d(t,{HeaderNames:()=>s});class s{}s.Authorization="Authorization",s.Cookie="Cookie"},"./node_modules/@microsoft/signalr/dist/esm/HttpClient.js":(e,t,o)=>{o.r(t),o.d(t,{HttpClient:()=>n,HttpResponse:()=>s});class s{constructor(e,t,o){this.statusCode=e,this.statusText=t,this.content=o}}class n{get(e,t){return this.send({...t,method:"GET",url:e})}post(e,t){return this.send({...t,method:"POST",url:e})}delete(e,t){return this.send({...t,method:"DELETE",url:e})}getCookieString(e){return""}}},"./node_modules/@microsoft/signalr/dist/esm/HttpConnection.js":(e,t,o)=>{o.r(t),o.d(t,{HttpConnection:()=>g,TransportSendQueue:()=>u});var s=o("./node_modules/@microsoft/signalr/dist/esm/AccessTokenHttpClient.js"),n=o("./node_modules/@microsoft/signalr/dist/esm/DefaultHttpClient.js"),r=o("./node_modules/@microsoft/signalr/dist/esm/Errors.js"),i=o("./node_modules/@microsoft/signalr/dist/esm/ILogger.js"),a=o("./node_modules/@microsoft/signalr/dist/esm/ITransport.js"),c=o("./node_modules/@microsoft/signalr/dist/esm/LongPollingTransport.js"),l=o("./node_modules/@microsoft/signalr/dist/esm/ServerSentEventsTransport.js"),h=o("./node_modules/@microsoft/signalr/dist/esm/Utils.js"),d=o("./node_modules/@microsoft/signalr/dist/esm/WebSocketTransport.js");class g{constructor(e,t={}){if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,h.Arg.isRequired(e,"url"),this._logger=(0,h.createLogger)(t.logger),this.baseUrl=this._resolveUrl(e),(t=t||{}).logMessageContent=void 0!==t.logMessageContent&&t.logMessageContent,"boolean"!=typeof t.withCredentials&&void 0!==t.withCredentials)throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");t.withCredentials=void 0===t.withCredentials||t.withCredentials,t.timeout=void 0===t.timeout?1e5:t.timeout;let o=null,r=null;if(h.Platform.isNode){const e=require;o=e("ws"),r=e("eventsource")}h.Platform.isNode||"undefined"==typeof WebSocket||t.WebSocket?h.Platform.isNode&&!t.WebSocket&&o&&(t.WebSocket=o):t.WebSocket=WebSocket,h.Platform.isNode||"undefined"==typeof EventSource||t.EventSource?h.Platform.isNode&&!t.EventSource&&void 0!==r&&(t.EventSource=r):t.EventSource=EventSource,this._httpClient=new s.AccessTokenHttpClient(t.httpClient||new n.DefaultHttpClient(this._logger),t.accessTokenFactory),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=t,this.onreceive=null,this.onclose=null}async start(e){if(e=e||a.TransferFormat.Binary,h.Arg.isIn(e,a.TransferFormat,"transferFormat"),this._logger.log(i.LogLevel.Debug,`Starting connection with transfer format '${a.TransferFormat[e]}'.`),"Disconnected"!==this._connectionState)return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(this._connectionState="Connecting",this._startInternalPromise=this._startInternal(e),await this._startInternalPromise,"Disconnecting"===this._connectionState){const e="Failed to start the HttpConnection before stop() was called.";return this._logger.log(i.LogLevel.Error,e),await this._stopPromise,Promise.reject(new r.AbortError(e))}if("Connected"!==this._connectionState){const e="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return this._logger.log(i.LogLevel.Error,e),Promise.reject(new r.AbortError(e))}this._connectionStarted=!0}send(e){return"Connected"!==this._connectionState?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new u(this.transport)),this._sendQueue.send(e))}async stop(e){return"Disconnected"===this._connectionState?(this._logger.log(i.LogLevel.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),Promise.resolve()):"Disconnecting"===this._connectionState?(this._logger.log(i.LogLevel.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):(this._connectionState="Disconnecting",this._stopPromise=new Promise((e=>{this._stopPromiseResolver=e})),await this._stopInternal(e),void await this._stopPromise)}async _stopInternal(e){this._stopError=e;try{await this._startInternalPromise}catch(e){}if(this.transport){try{await this.transport.stop()}catch(e){this._logger.log(i.LogLevel.Error,`HttpConnection.transport.stop() threw error '${e}'.`),this._stopConnection()}this.transport=void 0}else this._logger.log(i.LogLevel.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")}async _startInternal(e){let t=this.baseUrl;this._accessTokenFactory=this._options.accessTokenFactory,this._httpClient._accessTokenFactory=this._accessTokenFactory;try{if(this._options.skipNegotiation){if(this._options.transport!==a.HttpTransportType.WebSockets)throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");this.transport=this._constructTransport(a.HttpTransportType.WebSockets),await this._startTransport(t,e)}else{let o=null,s=0;do{if(o=await this._getNegotiationResponse(t),"Disconnecting"===this._connectionState||"Disconnected"===this._connectionState)throw new r.AbortError("The connection was stopped during negotiation.");if(o.error)throw new Error(o.error);if(o.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(o.url&&(t=o.url),o.accessToken){const e=o.accessToken;this._accessTokenFactory=()=>e,this._httpClient._accessToken=e,this._httpClient._accessTokenFactory=void 0}s++}while(o.url&&s<100);if(100===s&&o.url)throw new Error("Negotiate redirection limit exceeded.");await this._createTransport(t,this._options.transport,o,e)}this.transport instanceof c.LongPollingTransport&&(this.features.inherentKeepAlive=!0),"Connecting"===this._connectionState&&(this._logger.log(i.LogLevel.Debug,"The HttpConnection connected successfully."),this._connectionState="Connected")}catch(e){return this._logger.log(i.LogLevel.Error,"Failed to start the connection: "+e),this._connectionState="Disconnected",this.transport=void 0,this._stopPromiseResolver(),Promise.reject(e)}}async _getNegotiationResponse(e){const t={},[o,s]=(0,h.getUserAgentHeader)();t[o]=s;const n=this._resolveNegotiateUrl(e);this._logger.log(i.LogLevel.Debug,`Sending negotiation request: ${n}.`);try{const e=await this._httpClient.post(n,{content:"",headers:{...t,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials});if(200!==e.statusCode)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${e.statusCode}'`));const o=JSON.parse(e.content);return(!o.negotiateVersion||o.negotiateVersion<1)&&(o.connectionToken=o.connectionId),o.useStatefulReconnect&&!0!==this._options._useStatefulReconnect?Promise.reject(new r.FailedToNegotiateWithServerError("Client didn't negotiate Stateful Reconnect but the server did.")):o}catch(e){let t="Failed to complete negotiation with the server: "+e;return e instanceof r.HttpError&&404===e.statusCode&&(t+=" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),this._logger.log(i.LogLevel.Error,t),Promise.reject(new r.FailedToNegotiateWithServerError(t))}}_createConnectUrl(e,t){return t?e+(-1===e.indexOf("?")?"?":"&")+`id=${t}`:e}async _createTransport(e,t,o,s){let n=this._createConnectUrl(e,o.connectionToken);if(this._isITransport(t))return this._logger.log(i.LogLevel.Debug,"Connection was provided an instance of ITransport, using that directly."),this.transport=t,await this._startTransport(n,s),void(this.connectionId=o.connectionId);const c=[],l=o.availableTransports||[];let h=o;for(const o of l){const l=this._resolveTransportOrError(o,t,s,!0===(null==h?void 0:h.useStatefulReconnect));if(l instanceof Error)c.push(`${o.transport} failed:`),c.push(l);else if(this._isITransport(l)){if(this.transport=l,!h){try{h=await this._getNegotiationResponse(e)}catch(e){return Promise.reject(e)}n=this._createConnectUrl(e,h.connectionToken)}try{return await this._startTransport(n,s),void(this.connectionId=h.connectionId)}catch(e){if(this._logger.log(i.LogLevel.Error,`Failed to start the transport '${o.transport}': ${e}`),h=void 0,c.push(new r.FailedToStartTransportError(`${o.transport} failed: ${e}`,a.HttpTransportType[o.transport])),"Connecting"!==this._connectionState){const e="Failed to select transport before stop() was called.";return this._logger.log(i.LogLevel.Debug,e),Promise.reject(new r.AbortError(e))}}}}return c.length>0?Promise.reject(new r.AggregateErrors(`Unable to connect to the server with any of the available transports. ${c.join(" ")}`,c)):Promise.reject(new Error("None of the transports supported by the client are supported by the server."))}_constructTransport(e){switch(e){case a.HttpTransportType.WebSockets:if(!this._options.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new d.WebSocketTransport(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case a.HttpTransportType.ServerSentEvents:if(!this._options.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new l.ServerSentEventsTransport(this._httpClient,this._httpClient._accessToken,this._logger,this._options);case a.HttpTransportType.LongPolling:return new c.LongPollingTransport(this._httpClient,this._logger,this._options);default:throw new Error(`Unknown transport: ${e}.`)}}_startTransport(e,t){return this.transport.onreceive=this.onreceive,this.features.reconnect?this.transport.onclose=async o=>{let s=!1;if(this.features.reconnect){try{this.features.disconnected(),await this.transport.connect(e,t),await this.features.resend()}catch{s=!0}s&&this._stopConnection(o)}else this._stopConnection(o)}:this.transport.onclose=e=>this._stopConnection(e),this.transport.connect(e,t)}_resolveTransportOrError(e,t,o,s){const n=a.HttpTransportType[e.transport];if(null==n)return this._logger.log(i.LogLevel.Debug,`Skipping transport '${e.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);if(!function(e,t){return!e||!!(t&e)}(t,n))return this._logger.log(i.LogLevel.Debug,`Skipping transport '${a.HttpTransportType[n]}' because it was disabled by the client.`),new r.DisabledTransportError(`'${a.HttpTransportType[n]}' is disabled by the client.`,n);if(!(e.transferFormats.map((e=>a.TransferFormat[e])).indexOf(o)>=0))return this._logger.log(i.LogLevel.Debug,`Skipping transport '${a.HttpTransportType[n]}' because it does not support the requested transfer format '${a.TransferFormat[o]}'.`),new Error(`'${a.HttpTransportType[n]}' does not support ${a.TransferFormat[o]}.`);if(n===a.HttpTransportType.WebSockets&&!this._options.WebSocket||n===a.HttpTransportType.ServerSentEvents&&!this._options.EventSource)return this._logger.log(i.LogLevel.Debug,`Skipping transport '${a.HttpTransportType[n]}' because it is not supported in your environment.'`),new r.UnsupportedTransportError(`'${a.HttpTransportType[n]}' is not supported in your environment.`,n);this._logger.log(i.LogLevel.Debug,`Selecting transport '${a.HttpTransportType[n]}'.`);try{return this.features.reconnect=n===a.HttpTransportType.WebSockets?s:void 0,this._constructTransport(n)}catch(e){return e}}_isITransport(e){return e&&"object"==typeof e&&"connect"in e}_stopConnection(e){if(this._logger.log(i.LogLevel.Debug,`HttpConnection.stopConnection(${e}) called while in state ${this._connectionState}.`),this.transport=void 0,e=this._stopError||e,this._stopError=void 0,"Disconnected"!==this._connectionState){if("Connecting"===this._connectionState)throw this._logger.log(i.LogLevel.Warning,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);if("Disconnecting"===this._connectionState&&this._stopPromiseResolver(),e?this._logger.log(i.LogLevel.Error,`Connection disconnected with error '${e}'.`):this._logger.log(i.LogLevel.Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch((e=>{this._logger.log(i.LogLevel.Error,`TransportSendQueue.stop() threw error '${e}'.`)})),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(e)}catch(t){this._logger.log(i.LogLevel.Error,`HttpConnection.onclose(${e}) threw error '${t}'.`)}}}else this._logger.log(i.LogLevel.Debug,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`)}_resolveUrl(e){if(0===e.lastIndexOf("https://",0)||0===e.lastIndexOf("http://",0))return e;if(!h.Platform.isBrowser)throw new Error(`Cannot resolve '${e}'.`);const t=window.document.createElement("a");return t.href=e,this._logger.log(i.LogLevel.Information,`Normalizing '${e}' to '${t.href}'.`),t.href}_resolveNegotiateUrl(e){const t=new URL(e);t.pathname.endsWith("/")?t.pathname+="negotiate":t.pathname+="/negotiate";const o=new URLSearchParams(t.searchParams);return o.has("negotiateVersion")||o.append("negotiateVersion",this._negotiateVersion.toString()),o.has("useStatefulReconnect")?"true"===o.get("useStatefulReconnect")&&(this._options._useStatefulReconnect=!0):!0===this._options._useStatefulReconnect&&o.append("useStatefulReconnect","true"),t.search=o.toString(),t.toString()}}class u{constructor(e){this._transport=e,this._buffer=[],this._executing=!0,this._sendBufferedData=new p,this._transportResult=new p,this._sendLoopPromise=this._sendLoop()}send(e){return this._bufferData(e),this._transportResult||(this._transportResult=new p),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(e){if(this._buffer.length&&typeof this._buffer[0]!=typeof e)throw new Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof e}`);this._buffer.push(e),this._sendBufferedData.resolve()}async _sendLoop(){for(;;){if(await this._sendBufferedData.promise,!this._executing){this._transportResult&&this._transportResult.reject("Connection stopped.");break}this._sendBufferedData=new p;const e=this._transportResult;this._transportResult=void 0;const t="string"==typeof this._buffer[0]?this._buffer.join(""):u._concatBuffers(this._buffer);this._buffer.length=0;try{await this._transport.send(t),e.resolve()}catch(t){e.reject(t)}}}static _concatBuffers(e){const t=e.map((e=>e.byteLength)).reduce(((e,t)=>e+t)),o=new Uint8Array(t);let s=0;for(const t of e)o.set(new Uint8Array(t),s),s+=t.byteLength;return o.buffer}}class p{constructor(){this.promise=new Promise(((e,t)=>[this._resolver,this._rejecter]=[e,t]))}resolve(){this._resolver()}reject(e){this._rejecter(e)}}},"./node_modules/@microsoft/signalr/dist/esm/HubConnection.js":(e,t,o)=>{o.r(t),o.d(t,{HubConnection:()=>d,HubConnectionState:()=>h});var s=o("./node_modules/@microsoft/signalr/dist/esm/HandshakeProtocol.js"),n=o("./node_modules/@microsoft/signalr/dist/esm/Errors.js"),r=o("./node_modules/@microsoft/signalr/dist/esm/IHubProtocol.js"),i=o("./node_modules/@microsoft/signalr/dist/esm/ILogger.js"),a=o("./node_modules/@microsoft/signalr/dist/esm/Subject.js"),c=o("./node_modules/@microsoft/signalr/dist/esm/Utils.js"),l=o("./node_modules/@microsoft/signalr/dist/esm/MessageBuffer.js");var h;!function(e){e.Disconnected="Disconnected",e.Connecting="Connecting",e.Connected="Connected",e.Disconnecting="Disconnecting",e.Reconnecting="Reconnecting"}(h||(h={}));class d{static create(e,t,o,s,n,r,i){return new d(e,t,o,s,n,r,i)}constructor(e,t,o,n,a,l,d){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(i.LogLevel.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},c.Arg.isRequired(e,"connection"),c.Arg.isRequired(t,"logger"),c.Arg.isRequired(o,"protocol"),this.serverTimeoutInMilliseconds=null!=a?a:3e4,this.keepAliveIntervalInMilliseconds=null!=l?l:15e3,this._statefulReconnectBufferSize=null!=d?d:1e5,this._logger=t,this._protocol=o,this.connection=e,this._reconnectPolicy=n,this._handshakeProtocol=new s.HandshakeProtocol,this.connection.onreceive=e=>this._processIncomingData(e),this.connection.onclose=e=>this._connectionClosed(e),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=h.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:r.MessageType.Ping})}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(e){if(this._connectionState!==h.Disconnected&&this._connectionState!==h.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!e)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=e}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}async _startWithStateTransitions(){if(this._connectionState!==h.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));this._connectionState=h.Connecting,this._logger.log(i.LogLevel.Debug,"Starting HubConnection.");try{await this._startInternal(),c.Platform.isBrowser&&window.document.addEventListener("freeze",this._freezeEventListener),this._connectionState=h.Connected,this._connectionStarted=!0,this._logger.log(i.LogLevel.Debug,"HubConnection connected successfully.")}catch(e){return this._connectionState=h.Disconnected,this._logger.log(i.LogLevel.Debug,`HubConnection failed to start successfully because of error '${e}'.`),Promise.reject(e)}}async _startInternal(){this._stopDuringStartError=void 0,this._receivedHandshakeResponse=!1;const e=new Promise(((e,t)=>{this._handshakeResolver=e,this._handshakeRejecter=t}));await this.connection.start(this._protocol.transferFormat);try{let t=this._protocol.version;this.connection.features.reconnect||(t=1);const o={protocol:this._protocol.name,version:t};if(this._logger.log(i.LogLevel.Debug,"Sending handshake request."),await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(o)),this._logger.log(i.LogLevel.Information,`Using HubProtocol '${this._protocol.name}'.`),this._cleanupTimeout(),this._resetTimeoutPeriod(),this._resetKeepAliveInterval(),await e,this._stopDuringStartError)throw this._stopDuringStartError;(this.connection.features.reconnect||!1)&&(this._messageBuffer=new l.MessageBuffer(this._protocol,this.connection,this._statefulReconnectBufferSize),this.connection.features.disconnected=this._messageBuffer._disconnected.bind(this._messageBuffer),this.connection.features.resend=()=>{if(this._messageBuffer)return this._messageBuffer._resend()}),this.connection.features.inherentKeepAlive||await this._sendMessage(this._cachedPingMessage)}catch(e){throw this._logger.log(i.LogLevel.Debug,`Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`),this._cleanupTimeout(),this._cleanupPingTimer(),await this.connection.stop(e),e}}async stop(){const e=this._startPromise;this.connection.features.reconnect=!1,this._stopPromise=this._stopInternal(),await this._stopPromise;try{await e}catch(e){}}_stopInternal(e){if(this._connectionState===h.Disconnected)return this._logger.log(i.LogLevel.Debug,`Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),Promise.resolve();if(this._connectionState===h.Disconnecting)return this._logger.log(i.LogLevel.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise;const t=this._connectionState;return this._connectionState=h.Disconnecting,this._logger.log(i.LogLevel.Debug,"Stopping HubConnection."),this._reconnectDelayHandle?(this._logger.log(i.LogLevel.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(t===h.Connected&&this._sendCloseMessage(),this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=e||new n.AbortError("The connection was stopped before the hub handshake could complete."),this.connection.stop(e))}async _sendCloseMessage(){try{await this._sendWithProtocol(this._createCloseMessage())}catch{}}stream(e,...t){const[o,s]=this._replaceStreamingParams(t),n=this._createStreamInvocation(e,t,s);let i;const c=new a.Subject;return c.cancelCallback=()=>{const e=this._createCancelInvocation(n.invocationId);return delete this._callbacks[n.invocationId],i.then((()=>this._sendWithProtocol(e)))},this._callbacks[n.invocationId]=(e,t)=>{t?c.error(t):e&&(e.type===r.MessageType.Completion?e.error?c.error(new Error(e.error)):c.complete():c.next(e.item))},i=this._sendWithProtocol(n).catch((e=>{c.error(e),delete this._callbacks[n.invocationId]})),this._launchStreams(o,i),c}_sendMessage(e){return this._resetKeepAliveInterval(),this.connection.send(e)}_sendWithProtocol(e){return this._messageBuffer?this._messageBuffer._send(e):this._sendMessage(this._protocol.writeMessage(e))}send(e,...t){const[o,s]=this._replaceStreamingParams(t),n=this._sendWithProtocol(this._createInvocation(e,t,!0,s));return this._launchStreams(o,n),n}invoke(e,...t){const[o,s]=this._replaceStreamingParams(t),n=this._createInvocation(e,t,!1,s);return new Promise(((e,t)=>{this._callbacks[n.invocationId]=(o,s)=>{s?t(s):o&&(o.type===r.MessageType.Completion?o.error?t(new Error(o.error)):e(o.result):t(new Error(`Unexpected message type: ${o.type}`)))};const s=this._sendWithProtocol(n).catch((e=>{t(e),delete this._callbacks[n.invocationId]}));this._launchStreams(o,s)}))}on(e,t){e&&t&&(e=e.toLowerCase(),this._methods[e]||(this._methods[e]=[]),-1===this._methods[e].indexOf(t)&&this._methods[e].push(t))}off(e,t){if(!e)return;e=e.toLowerCase();const o=this._methods[e];if(o)if(t){const s=o.indexOf(t);-1!==s&&(o.splice(s,1),0===o.length&&delete this._methods[e])}else delete this._methods[e]}onclose(e){e&&this._closedCallbacks.push(e)}onreconnecting(e){e&&this._reconnectingCallbacks.push(e)}onreconnected(e){e&&this._reconnectedCallbacks.push(e)}_processIncomingData(e){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(e=this._processHandshakeResponse(e),this._receivedHandshakeResponse=!0),e){const t=this._protocol.parseMessages(e,this._logger);for(const e of t)if(!this._messageBuffer||this._messageBuffer._shouldProcessMessage(e))switch(e.type){case r.MessageType.Invocation:this._invokeClientMethod(e).catch((e=>{this._logger.log(i.LogLevel.Error,`Invoke client method threw error: ${(0,c.getErrorString)(e)}`)}));break;case r.MessageType.StreamItem:case r.MessageType.Completion:{const t=this._callbacks[e.invocationId];if(t){e.type===r.MessageType.Completion&&delete this._callbacks[e.invocationId];try{t(e)}catch(e){this._logger.log(i.LogLevel.Error,`Stream callback threw error: ${(0,c.getErrorString)(e)}`)}}break}case r.MessageType.Ping:break;case r.MessageType.Close:{this._logger.log(i.LogLevel.Information,"Close message received from server.");const t=e.error?new Error("Server returned an error on close: "+e.error):void 0;!0===e.allowReconnect?this.connection.stop(t):this._stopPromise=this._stopInternal(t);break}case r.MessageType.Ack:this._messageBuffer&&this._messageBuffer._ack(e);break;case r.MessageType.Sequence:this._messageBuffer&&this._messageBuffer._resetSequence(e);break;default:this._logger.log(i.LogLevel.Warning,`Invalid message type: ${e.type}.`)}}this._resetTimeoutPeriod()}_processHandshakeResponse(e){let t,o;try{[o,t]=this._handshakeProtocol.parseHandshakeResponse(e)}catch(e){const t="Error parsing handshake response: "+e;this._logger.log(i.LogLevel.Error,t);const o=new Error(t);throw this._handshakeRejecter(o),o}if(t.error){const e="Server returned handshake error: "+t.error;this._logger.log(i.LogLevel.Error,e);const o=new Error(e);throw this._handshakeRejecter(o),o}return this._logger.log(i.LogLevel.Debug,"Server handshake complete."),this._handshakeResolver(),o}_resetKeepAliveInterval(){this.connection.features.inherentKeepAlive||(this._nextKeepAlive=(new Date).getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){if(!(this.connection.features&&this.connection.features.inherentKeepAlive||(this._timeoutHandle=setTimeout((()=>this.serverTimeout()),this.serverTimeoutInMilliseconds),void 0!==this._pingServerHandle))){let e=this._nextKeepAlive-(new Date).getTime();e<0&&(e=0),this._pingServerHandle=setTimeout((async()=>{if(this._connectionState===h.Connected)try{await this._sendMessage(this._cachedPingMessage)}catch{this._cleanupPingTimer()}}),e)}}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}async _invokeClientMethod(e){const t=e.target.toLowerCase(),o=this._methods[t];if(!o)return this._logger.log(i.LogLevel.Warning,`No client method with the name '${t}' found.`),void(e.invocationId&&(this._logger.log(i.LogLevel.Warning,`No result given for '${t}' method and invocation ID '${e.invocationId}'.`),await this._sendWithProtocol(this._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null))));const s=o.slice(),n=!!e.invocationId;let r,a,c;for(const o of s)try{const s=r;r=await o.apply(this,e.arguments),n&&r&&s&&(this._logger.log(i.LogLevel.Error,`Multiple results provided for '${t}'. Sending error to server.`),c=this._createCompletionMessage(e.invocationId,"Client provided multiple results.",null)),a=void 0}catch(e){a=e,this._logger.log(i.LogLevel.Error,`A callback for the method '${t}' threw error '${e}'.`)}c?await this._sendWithProtocol(c):n?(a?c=this._createCompletionMessage(e.invocationId,`${a}`,null):void 0!==r?c=this._createCompletionMessage(e.invocationId,null,r):(this._logger.log(i.LogLevel.Warning,`No result given for '${t}' method and invocation ID '${e.invocationId}'.`),c=this._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null)),await this._sendWithProtocol(c)):r&&this._logger.log(i.LogLevel.Error,`Result given for '${t}' method but server is not expecting a result.`)}_connectionClosed(e){this._logger.log(i.LogLevel.Debug,`HubConnection.connectionClosed(${e}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||e||new n.AbortError("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(e||new Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===h.Disconnecting?this._completeClose(e):this._connectionState===h.Connected&&this._reconnectPolicy?this._reconnect(e):this._connectionState===h.Connected&&this._completeClose(e)}_completeClose(e){if(this._connectionStarted){this._connectionState=h.Disconnected,this._connectionStarted=!1,this._messageBuffer&&(this._messageBuffer._dispose(null!=e?e:new Error("Connection closed.")),this._messageBuffer=void 0),c.Platform.isBrowser&&window.document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach((t=>t.apply(this,[e])))}catch(t){this._logger.log(i.LogLevel.Error,`An onclose callback called with error '${e}' threw error '${t}'.`)}}}async _reconnect(e){const t=Date.now();let o=0,s=void 0!==e?e:new Error("Attempting to reconnect due to a unknown error."),n=this._getNextRetryDelay(o++,0,s);if(null===n)return this._logger.log(i.LogLevel.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),void this._completeClose(e);if(this._connectionState=h.Reconnecting,e?this._logger.log(i.LogLevel.Information,`Connection reconnecting because of error '${e}'.`):this._logger.log(i.LogLevel.Information,"Connection reconnecting."),0!==this._reconnectingCallbacks.length){try{this._reconnectingCallbacks.forEach((t=>t.apply(this,[e])))}catch(t){this._logger.log(i.LogLevel.Error,`An onreconnecting callback called with error '${e}' threw error '${t}'.`)}if(this._connectionState!==h.Reconnecting)return void this._logger.log(i.LogLevel.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.")}for(;null!==n;){if(this._logger.log(i.LogLevel.Information,`Reconnect attempt number ${o} will start in ${n} ms.`),await new Promise((e=>{this._reconnectDelayHandle=setTimeout(e,n)})),this._reconnectDelayHandle=void 0,this._connectionState!==h.Reconnecting)return void this._logger.log(i.LogLevel.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");try{if(await this._startInternal(),this._connectionState=h.Connected,this._logger.log(i.LogLevel.Information,"HubConnection reconnected successfully."),0!==this._reconnectedCallbacks.length)try{this._reconnectedCallbacks.forEach((e=>e.apply(this,[this.connection.connectionId])))}catch(e){this._logger.log(i.LogLevel.Error,`An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`)}return}catch(e){if(this._logger.log(i.LogLevel.Information,`Reconnect attempt failed because of error '${e}'.`),this._connectionState!==h.Reconnecting)return this._logger.log(i.LogLevel.Debug,`Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),void(this._connectionState===h.Disconnecting&&this._completeClose());s=e instanceof Error?e:new Error(e.toString()),n=this._getNextRetryDelay(o++,Date.now()-t,s)}}this._logger.log(i.LogLevel.Information,`Reconnect retries have been exhausted after ${Date.now()-t} ms and ${o} failed attempts. Connection disconnecting.`),this._completeClose()}_getNextRetryDelay(e,t,o){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:t,previousRetryCount:e,retryReason:o})}catch(o){return this._logger.log(i.LogLevel.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${t}) threw error '${o}'.`),null}}_cancelCallbacksWithError(e){const t=this._callbacks;this._callbacks={},Object.keys(t).forEach((o=>{const s=t[o];try{s(null,e)}catch(t){this._logger.log(i.LogLevel.Error,`Stream 'error' callback called with '${e}' threw error: ${(0,c.getErrorString)(t)}`)}}))}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(e,t,o,s){if(o)return 0!==s.length?{target:e,arguments:t,streamIds:s,type:r.MessageType.Invocation}:{target:e,arguments:t,type:r.MessageType.Invocation};{const o=this._invocationId;return this._invocationId++,0!==s.length?{target:e,arguments:t,invocationId:o.toString(),streamIds:s,type:r.MessageType.Invocation}:{target:e,arguments:t,invocationId:o.toString(),type:r.MessageType.Invocation}}}_launchStreams(e,t){if(0!==e.length){t||(t=Promise.resolve());for(const o in e)e[o].subscribe({complete:()=>{t=t.then((()=>this._sendWithProtocol(this._createCompletionMessage(o))))},error:e=>{let s;s=e instanceof Error?e.message:e&&e.toString?e.toString():"Unknown error",t=t.then((()=>this._sendWithProtocol(this._createCompletionMessage(o,s))))},next:e=>{t=t.then((()=>this._sendWithProtocol(this._createStreamItemMessage(o,e))))}})}}_replaceStreamingParams(e){const t=[],o=[];for(let s=0;s<e.length;s++){const n=e[s];if(this._isObservable(n)){const r=this._invocationId;this._invocationId++,t[r]=n,o.push(r.toString()),e.splice(s,1)}}return[t,o]}_isObservable(e){return e&&e.subscribe&&"function"==typeof e.subscribe}_createStreamInvocation(e,t,o){const s=this._invocationId;return this._invocationId++,0!==o.length?{target:e,arguments:t,invocationId:s.toString(),streamIds:o,type:r.MessageType.StreamInvocation}:{target:e,arguments:t,invocationId:s.toString(),type:r.MessageType.StreamInvocation}}_createCancelInvocation(e){return{invocationId:e,type:r.MessageType.CancelInvocation}}_createStreamItemMessage(e,t){return{invocationId:e,item:t,type:r.MessageType.StreamItem}}_createCompletionMessage(e,t,o){return t?{error:t,invocationId:e,type:r.MessageType.Completion}:{invocationId:e,result:o,type:r.MessageType.Completion}}_createCloseMessage(){return{type:r.MessageType.Close}}}},"./node_modules/@microsoft/signalr/dist/esm/HubConnectionBuilder.js":(e,t,o)=>{o.r(t),o.d(t,{HubConnectionBuilder:()=>d});var s=o("./node_modules/@microsoft/signalr/dist/esm/DefaultReconnectPolicy.js"),n=o("./node_modules/@microsoft/signalr/dist/esm/HttpConnection.js"),r=o("./node_modules/@microsoft/signalr/dist/esm/HubConnection.js"),i=o("./node_modules/@microsoft/signalr/dist/esm/ILogger.js"),a=o("./node_modules/@microsoft/signalr/dist/esm/JsonHubProtocol.js"),c=o("./node_modules/@microsoft/signalr/dist/esm/Loggers.js"),l=o("./node_modules/@microsoft/signalr/dist/esm/Utils.js");const h={trace:i.LogLevel.Trace,debug:i.LogLevel.Debug,info:i.LogLevel.Information,information:i.LogLevel.Information,warn:i.LogLevel.Warning,warning:i.LogLevel.Warning,error:i.LogLevel.Error,critical:i.LogLevel.Critical,none:i.LogLevel.None};class d{configureLogging(e){if(l.Arg.isRequired(e,"logging"),void 0!==e.log)this.logger=e;else if("string"==typeof e){const t=function(e){const t=h[e.toLowerCase()];if(void 0!==t)return t;throw new Error(`Unknown log level: ${e}`)}(e);this.logger=new l.ConsoleLogger(t)}else this.logger=new l.ConsoleLogger(e);return this}withUrl(e,t){return l.Arg.isRequired(e,"url"),l.Arg.isNotEmpty(e,"url"),this.url=e,this.httpConnectionOptions="object"==typeof t?{...this.httpConnectionOptions,...t}:{...this.httpConnectionOptions,transport:t},this}withHubProtocol(e){return l.Arg.isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return e?Array.isArray(e)?this.reconnectPolicy=new s.DefaultReconnectPolicy(e):this.reconnectPolicy=e:this.reconnectPolicy=new s.DefaultReconnectPolicy,this}withServerTimeout(e){return l.Arg.isRequired(e,"milliseconds"),this._serverTimeoutInMilliseconds=e,this}withKeepAliveInterval(e){return l.Arg.isRequired(e,"milliseconds"),this._keepAliveIntervalInMilliseconds=e,this}withStatefulReconnect(e){return void 0===this.httpConnectionOptions&&(this.httpConnectionOptions={}),this.httpConnectionOptions._useStatefulReconnect=!0,this._statefulReconnectBufferSize=null==e?void 0:e.bufferSize,this}build(){const e=this.httpConnectionOptions||{};if(void 0===e.logger&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const t=new n.HttpConnection(this.url,e);return r.HubConnection.create(t,this.logger||c.NullLogger.instance,this.protocol||new a.JsonHubProtocol,this.reconnectPolicy,this._serverTimeoutInMilliseconds,this._keepAliveIntervalInMilliseconds,this._statefulReconnectBufferSize)}}},"./node_modules/@microsoft/signalr/dist/esm/IHubProtocol.js":(e,t,o)=>{var s;o.r(t),o.d(t,{MessageType:()=>s}),function(e){e[e.Invocation=1]="Invocation",e[e.StreamItem=2]="StreamItem",e[e.Completion=3]="Completion",e[e.StreamInvocation=4]="StreamInvocation",e[e.CancelInvocation=5]="CancelInvocation",e[e.Ping=6]="Ping",e[e.Close=7]="Close",e[e.Ack=8]="Ack",e[e.Sequence=9]="Sequence"}(s||(s={}))},"./node_modules/@microsoft/signalr/dist/esm/ILogger.js":(e,t,o)=>{var s;o.r(t),o.d(t,{LogLevel:()=>s}),function(e){e[e.Trace=0]="Trace",e[e.Debug=1]="Debug",e[e.Information=2]="Information",e[e.Warning=3]="Warning",e[e.Error=4]="Error",e[e.Critical=5]="Critical",e[e.None=6]="None"}(s||(s={}))},"./node_modules/@microsoft/signalr/dist/esm/ITransport.js":(e,t,o)=>{var s,n;o.r(t),o.d(t,{HttpTransportType:()=>s,TransferFormat:()=>n}),function(e){e[e.None=0]="None",e[e.WebSockets=1]="WebSockets",e[e.ServerSentEvents=2]="ServerSentEvents",e[e.LongPolling=4]="LongPolling"}(s||(s={})),function(e){e[e.Text=1]="Text",e[e.Binary=2]="Binary"}(n||(n={}))},"./node_modules/@microsoft/signalr/dist/esm/JsonHubProtocol.js":(e,t,o)=>{o.r(t),o.d(t,{JsonHubProtocol:()=>c});var s=o("./node_modules/@microsoft/signalr/dist/esm/IHubProtocol.js"),n=o("./node_modules/@microsoft/signalr/dist/esm/ILogger.js"),r=o("./node_modules/@microsoft/signalr/dist/esm/ITransport.js"),i=o("./node_modules/@microsoft/signalr/dist/esm/Loggers.js"),a=o("./node_modules/@microsoft/signalr/dist/esm/TextMessageFormat.js");class c{constructor(){this.name="json",this.version=2,this.transferFormat=r.TransferFormat.Text}parseMessages(e,t){if("string"!=typeof e)throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];null===t&&(t=i.NullLogger.instance);const o=a.TextMessageFormat.parse(e),r=[];for(const e of o){const o=JSON.parse(e);if("number"!=typeof o.type)throw new Error("Invalid payload.");switch(o.type){case s.MessageType.Invocation:this._isInvocationMessage(o);break;case s.MessageType.StreamItem:this._isStreamItemMessage(o);break;case s.MessageType.Completion:this._isCompletionMessage(o);break;case s.MessageType.Ping:case s.MessageType.Close:break;case s.MessageType.Ack:this._isAckMessage(o);break;case s.MessageType.Sequence:this._isSequenceMessage(o);break;default:t.log(n.LogLevel.Information,"Unknown message type '"+o.type+"' ignored.");continue}r.push(o)}return r}writeMessage(e){return a.TextMessageFormat.write(JSON.stringify(e))}_isInvocationMessage(e){this._assertNotEmptyString(e.target,"Invalid payload for Invocation message."),void 0!==e.invocationId&&this._assertNotEmptyString(e.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(e){if(this._assertNotEmptyString(e.invocationId,"Invalid payload for StreamItem message."),void 0===e.item)throw new Error("Invalid payload for StreamItem message.")}_isCompletionMessage(e){if(e.result&&e.error)throw new Error("Invalid payload for Completion message.");!e.result&&e.error&&this._assertNotEmptyString(e.error,"Invalid payload for Completion message."),this._assertNotEmptyString(e.invocationId,"Invalid payload for Completion message.")}_isAckMessage(e){if("number"!=typeof e.sequenceId)throw new Error("Invalid SequenceId for Ack message.")}_isSequenceMessage(e){if("number"!=typeof e.sequenceId)throw new Error("Invalid SequenceId for Sequence message.")}_assertNotEmptyString(e,t){if("string"!=typeof e||""===e)throw new Error(t)}}},"./node_modules/@microsoft/signalr/dist/esm/Loggers.js":(e,t,o)=>{o.r(t),o.d(t,{NullLogger:()=>s});class s{constructor(){}log(e,t){}}s.instance=new s},"./node_modules/@microsoft/signalr/dist/esm/LongPollingTransport.js":(e,t,o)=>{o.r(t),o.d(t,{LongPollingTransport:()=>c});var s=o("./node_modules/@microsoft/signalr/dist/esm/AbortController.js"),n=o("./node_modules/@microsoft/signalr/dist/esm/Errors.js"),r=o("./node_modules/@microsoft/signalr/dist/esm/ILogger.js"),i=o("./node_modules/@microsoft/signalr/dist/esm/ITransport.js"),a=o("./node_modules/@microsoft/signalr/dist/esm/Utils.js");class c{get pollAborted(){return this._pollAbort.aborted}constructor(e,t,o){this._httpClient=e,this._logger=t,this._pollAbort=new s.AbortController,this._options=o,this._running=!1,this.onreceive=null,this.onclose=null}async connect(e,t){if(a.Arg.isRequired(e,"url"),a.Arg.isRequired(t,"transferFormat"),a.Arg.isIn(t,i.TransferFormat,"transferFormat"),this._url=e,this._logger.log(r.LogLevel.Trace,"(LongPolling transport) Connecting."),t===i.TransferFormat.Binary&&"undefined"!=typeof XMLHttpRequest&&"string"!=typeof(new XMLHttpRequest).responseType)throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[o,s]=(0,a.getUserAgentHeader)(),c={[o]:s,...this._options.headers},l={abortSignal:this._pollAbort.signal,headers:c,timeout:1e5,withCredentials:this._options.withCredentials};t===i.TransferFormat.Binary&&(l.responseType="arraybuffer");const h=`${e}&_=${Date.now()}`;this._logger.log(r.LogLevel.Trace,`(LongPolling transport) polling: ${h}.`);const d=await this._httpClient.get(h,l);200!==d.statusCode?(this._logger.log(r.LogLevel.Error,`(LongPolling transport) Unexpected response code: ${d.statusCode}.`),this._closeError=new n.HttpError(d.statusText||"",d.statusCode),this._running=!1):this._running=!0,this._receiving=this._poll(this._url,l)}async _poll(e,t){try{for(;this._running;)try{const o=`${e}&_=${Date.now()}`;this._logger.log(r.LogLevel.Trace,`(LongPolling transport) polling: ${o}.`);const s=await this._httpClient.get(o,t);204===s.statusCode?(this._logger.log(r.LogLevel.Information,"(LongPolling transport) Poll terminated by server."),this._running=!1):200!==s.statusCode?(this._logger.log(r.LogLevel.Error,`(LongPolling transport) Unexpected response code: ${s.statusCode}.`),this._closeError=new n.HttpError(s.statusText||"",s.statusCode),this._running=!1):s.content?(this._logger.log(r.LogLevel.Trace,`(LongPolling transport) data received. ${(0,a.getDataDetail)(s.content,this._options.logMessageContent)}.`),this.onreceive&&this.onreceive(s.content)):this._logger.log(r.LogLevel.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(e){this._running?e instanceof n.TimeoutError?this._logger.log(r.LogLevel.Trace,"(LongPolling transport) Poll timed out, reissuing."):(this._closeError=e,this._running=!1):this._logger.log(r.LogLevel.Trace,`(LongPolling transport) Poll errored after shutdown: ${e.message}`)}}finally{this._logger.log(r.LogLevel.Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this._raiseOnClose()}}async send(e){return this._running?(0,a.sendMessage)(this._logger,"LongPolling",this._httpClient,this._url,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}async stop(){this._logger.log(r.LogLevel.Trace,"(LongPolling transport) Stopping polling."),this._running=!1,this._pollAbort.abort();try{await this._receiving,this._logger.log(r.LogLevel.Trace,`(LongPolling transport) sending DELETE request to ${this._url}.`);const e={},[t,o]=(0,a.getUserAgentHeader)();e[t]=o;const s={headers:{...e,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials};let i;try{await this._httpClient.delete(this._url,s)}catch(e){i=e}i?i instanceof n.HttpError&&(404===i.statusCode?this._logger.log(r.LogLevel.Trace,"(LongPolling transport) A 404 response was returned from sending a DELETE request."):this._logger.log(r.LogLevel.Trace,`(LongPolling transport) Error sending a DELETE request: ${i}`)):this._logger.log(r.LogLevel.Trace,"(LongPolling transport) DELETE request accepted.")}finally{this._logger.log(r.LogLevel.Trace,"(LongPolling transport) Stop finished."),this._raiseOnClose()}}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(r.LogLevel.Trace,e),this.onclose(this._closeError)}}}},"./node_modules/@microsoft/signalr/dist/esm/MessageBuffer.js":(e,t,o)=>{o.r(t),o.d(t,{MessageBuffer:()=>r});var s=o("./node_modules/@microsoft/signalr/dist/esm/IHubProtocol.js"),n=o("./node_modules/@microsoft/signalr/dist/esm/Utils.js");class r{constructor(e,t,o){this._bufferSize=1e5,this._messages=[],this._totalMessageCount=0,this._waitForSequenceMessage=!1,this._nextReceivingSequenceId=1,this._latestReceivedSequenceId=0,this._bufferedByteCount=0,this._reconnectInProgress=!1,this._protocol=e,this._connection=t,this._bufferSize=o}async _send(e){const t=this._protocol.writeMessage(e);let o=Promise.resolve();if(this._isInvocationMessage(e)){this._totalMessageCount++;let e=()=>{},s=()=>{};(0,n.isArrayBuffer)(t)?this._bufferedByteCount+=t.byteLength:this._bufferedByteCount+=t.length,this._bufferedByteCount>=this._bufferSize&&(o=new Promise(((t,o)=>{e=t,s=o}))),this._messages.push(new i(t,this._totalMessageCount,e,s))}try{this._reconnectInProgress||await this._connection.send(t)}catch{this._disconnected()}await o}_ack(e){let t=-1;for(let o=0;o<this._messages.length;o++){const s=this._messages[o];if(s._id<=e.sequenceId)t=o,(0,n.isArrayBuffer)(s._message)?this._bufferedByteCount-=s._message.byteLength:this._bufferedByteCount-=s._message.length,s._resolver();else{if(!(this._bufferedByteCount<this._bufferSize))break;s._resolver()}}-1!==t&&(this._messages=this._messages.slice(t+1))}_shouldProcessMessage(e){if(this._waitForSequenceMessage)return e.type===s.MessageType.Sequence&&(this._waitForSequenceMessage=!1,!0);if(!this._isInvocationMessage(e))return!0;const t=this._nextReceivingSequenceId;return this._nextReceivingSequenceId++,t<=this._latestReceivedSequenceId?(t===this._latestReceivedSequenceId&&this._ackTimer(),!1):(this._latestReceivedSequenceId=t,this._ackTimer(),!0)}_resetSequence(e){e.sequenceId>this._nextReceivingSequenceId?this._connection.stop(new Error("Sequence ID greater than amount of messages we've received.")):this._nextReceivingSequenceId=e.sequenceId}_disconnected(){this._reconnectInProgress=!0,this._waitForSequenceMessage=!0}async _resend(){const e=0!==this._messages.length?this._messages[0]._id:this._totalMessageCount+1;await this._connection.send(this._protocol.writeMessage({type:s.MessageType.Sequence,sequenceId:e}));const t=this._messages;for(const e of t)await this._connection.send(e._message);this._reconnectInProgress=!1}_dispose(e){null!=e||(e=new Error("Unable to reconnect to server."));for(const t of this._messages)t._rejector(e)}_isInvocationMessage(e){switch(e.type){case s.MessageType.Invocation:case s.MessageType.StreamItem:case s.MessageType.Completion:case s.MessageType.StreamInvocation:case s.MessageType.CancelInvocation:return!0;case s.MessageType.Close:case s.MessageType.Sequence:case s.MessageType.Ping:case s.MessageType.Ack:return!1}}_ackTimer(){void 0===this._ackTimerHandle&&(this._ackTimerHandle=setTimeout((async()=>{try{this._reconnectInProgress||await this._connection.send(this._protocol.writeMessage({type:s.MessageType.Ack,sequenceId:this._latestReceivedSequenceId}))}catch{}clearTimeout(this._ackTimerHandle),this._ackTimerHandle=void 0}),1e3))}}class i{constructor(e,t,o,s){this._message=e,this._id=t,this._resolver=o,this._rejector=s}}},"./node_modules/@microsoft/signalr/dist/esm/ServerSentEventsTransport.js":(e,t,o)=>{o.r(t),o.d(t,{ServerSentEventsTransport:()=>i});var s=o("./node_modules/@microsoft/signalr/dist/esm/ILogger.js"),n=o("./node_modules/@microsoft/signalr/dist/esm/ITransport.js"),r=o("./node_modules/@microsoft/signalr/dist/esm/Utils.js");class i{constructor(e,t,o,s){this._httpClient=e,this._accessToken=t,this._logger=o,this._options=s,this.onreceive=null,this.onclose=null}async connect(e,t){return r.Arg.isRequired(e,"url"),r.Arg.isRequired(t,"transferFormat"),r.Arg.isIn(t,n.TransferFormat,"transferFormat"),this._logger.log(s.LogLevel.Trace,"(SSE transport) Connecting."),this._url=e,this._accessToken&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(this._accessToken)}`),new Promise(((o,i)=>{let a,c=!1;if(t===n.TransferFormat.Text){if(r.Platform.isBrowser||r.Platform.isWebWorker)a=new this._options.EventSource(e,{withCredentials:this._options.withCredentials});else{const t=this._httpClient.getCookieString(e),o={};o.Cookie=t;const[s,n]=(0,r.getUserAgentHeader)();o[s]=n,a=new this._options.EventSource(e,{withCredentials:this._options.withCredentials,headers:{...o,...this._options.headers}})}try{a.onmessage=e=>{if(this.onreceive)try{this._logger.log(s.LogLevel.Trace,`(SSE transport) data received. ${(0,r.getDataDetail)(e.data,this._options.logMessageContent)}.`),this.onreceive(e.data)}catch(e){return void this._close(e)}},a.onerror=e=>{c?this._close():i(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},a.onopen=()=>{this._logger.log(s.LogLevel.Information,`SSE connected to ${this._url}`),this._eventSource=a,c=!0,o()}}catch(e){return void i(e)}}else i(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"))}))}async send(e){return this._eventSource?(0,r.sendMessage)(this._logger,"SSE",this._httpClient,this._url,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}stop(){return this._close(),Promise.resolve()}_close(e){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(e))}}},"./node_modules/@microsoft/signalr/dist/esm/Subject.js":(e,t,o)=>{o.r(t),o.d(t,{Subject:()=>n});var s=o("./node_modules/@microsoft/signalr/dist/esm/Utils.js");class n{constructor(){this.observers=[]}next(e){for(const t of this.observers)t.next(e)}error(e){for(const t of this.observers)t.error&&t.error(e)}complete(){for(const e of this.observers)e.complete&&e.complete()}subscribe(e){return this.observers.push(e),new s.SubjectSubscription(this,e)}}},"./node_modules/@microsoft/signalr/dist/esm/TextMessageFormat.js":(e,t,o)=>{o.r(t),o.d(t,{TextMessageFormat:()=>s});class s{static write(e){return`${e}${s.RecordSeparator}`}static parse(e){if(e[e.length-1]!==s.RecordSeparator)throw new Error("Message is incomplete.");const t=e.split(s.RecordSeparator);return t.pop(),t}}s.RecordSeparatorCode=30,s.RecordSeparator=String.fromCharCode(s.RecordSeparatorCode)},"./node_modules/@microsoft/signalr/dist/esm/Utils.js":(e,t,o)=>{o.r(t),o.d(t,{Arg:()=>i,ConsoleLogger:()=>p,Platform:()=>a,SubjectSubscription:()=>u,VERSION:()=>r.VERSION,constructUserAgent:()=>m,createLogger:()=>g,formatArrayBuffer:()=>l,getDataDetail:()=>c,getErrorString:()=>y,getGlobalThis:()=>w,getUserAgentHeader:()=>_,isArrayBuffer:()=>h,sendMessage:()=>d});var s=o("./node_modules/@microsoft/signalr/dist/esm/ILogger.js"),n=o("./node_modules/@microsoft/signalr/dist/esm/Loggers.js"),r=o("./node_modules/@microsoft/signalr/dist/esm/pkg-version.js");class i{static isRequired(e,t){if(null==e)throw new Error(`The '${t}' argument is required.`)}static isNotEmpty(e,t){if(!e||e.match(/^\s*$/))throw new Error(`The '${t}' argument should not be empty.`)}static isIn(e,t,o){if(!(e in t))throw new Error(`Unknown ${o} value: ${e}.`)}}class a{static get isBrowser(){return!a.isNode&&"object"==typeof window&&"object"==typeof window.document}static get isWebWorker(){return!a.isNode&&"object"==typeof self&&"importScripts"in self}static get isReactNative(){return!a.isNode&&"object"==typeof window&&void 0===window.document}static get isNode(){return"undefined"!=typeof process&&process.release&&"node"===process.release.name}}function c(e,t){let o="";return h(e)?(o=`Binary data of length ${e.byteLength}`,t&&(o+=`. Content: '${l(e)}'`)):"string"==typeof e&&(o=`String data of length ${e.length}`,t&&(o+=`. Content: '${e}'`)),o}function l(e){const t=new Uint8Array(e);let o="";return t.forEach((e=>{o+=`0x${e<16?"0":""}${e.toString(16)} `})),o.substr(0,o.length-1)}function h(e){return e&&"undefined"!=typeof ArrayBuffer&&(e instanceof ArrayBuffer||e.constructor&&"ArrayBuffer"===e.constructor.name)}async function d(e,t,o,n,r,i){const a={},[l,d]=_();a[l]=d,e.log(s.LogLevel.Trace,`(${t} transport) sending data. ${c(r,i.logMessageContent)}.`);const g=h(r)?"arraybuffer":"text",u=await o.post(n,{content:r,headers:{...a,...i.headers},responseType:g,timeout:i.timeout,withCredentials:i.withCredentials});e.log(s.LogLevel.Trace,`(${t} transport) request complete. Response status: ${u.statusCode}.`)}function g(e){return void 0===e?new p(s.LogLevel.Information):null===e?n.NullLogger.instance:void 0!==e.log?e:new p(e)}class u{constructor(e,t){this._subject=e,this._observer=t}dispose(){const e=this._subject.observers.indexOf(this._observer);e>-1&&this._subject.observers.splice(e,1),0===this._subject.observers.length&&this._subject.cancelCallback&&this._subject.cancelCallback().catch((e=>{}))}}class p{constructor(e){this._minLevel=e,this.out=console}log(e,t){if(e>=this._minLevel){const o=`[${(new Date).toISOString()}] ${s.LogLevel[e]}: ${t}`;switch(e){case s.LogLevel.Critical:case s.LogLevel.Error:this.out.error(o);break;case s.LogLevel.Warning:this.out.warn(o);break;case s.LogLevel.Information:this.out.info(o);break;default:this.out.log(o)}}}}function _(){let e="X-SignalR-User-Agent";return a.isNode&&(e="User-Agent"),[e,m(r.VERSION,f(),b(),v())]}function m(e,t,o,s){let n="Microsoft SignalR/";const r=e.split(".");return n+=`${r[0]}.${r[1]}`,n+=` (${e}; `,n+=t&&""!==t?`${t}; `:"Unknown OS; ",n+=`${o}`,n+=s?`; ${s}`:"; Unknown Runtime Version",n+=")",n}function f(){if(!a.isNode)return"";switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}}function v(){if(a.isNode)return process.versions.node}function b(){return a.isNode?"NodeJS":"Browser"}function y(e){return e.stack?e.stack:e.message?e.message:`${e}`}function w(){if("undefined"!=typeof globalThis)return globalThis;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==o.g)return o.g;throw new Error("could not find global")}},"./node_modules/@microsoft/signalr/dist/esm/WebSocketTransport.js":(e,t,o)=>{o.r(t),o.d(t,{WebSocketTransport:()=>a});var s=o("./node_modules/@microsoft/signalr/dist/esm/HeaderNames.js"),n=o("./node_modules/@microsoft/signalr/dist/esm/ILogger.js"),r=o("./node_modules/@microsoft/signalr/dist/esm/ITransport.js"),i=o("./node_modules/@microsoft/signalr/dist/esm/Utils.js");class a{constructor(e,t,o,s,n,r){this._logger=o,this._accessTokenFactory=t,this._logMessageContent=s,this._webSocketConstructor=n,this._httpClient=e,this.onreceive=null,this.onclose=null,this._headers=r}async connect(e,t){let o;return i.Arg.isRequired(e,"url"),i.Arg.isRequired(t,"transferFormat"),i.Arg.isIn(t,r.TransferFormat,"transferFormat"),this._logger.log(n.LogLevel.Trace,"(WebSockets transport) Connecting."),this._accessTokenFactory&&(o=await this._accessTokenFactory()),new Promise(((a,c)=>{let l;e=e.replace(/^http/,"ws");const h=this._httpClient.getCookieString(e);let d=!1;if(i.Platform.isNode||i.Platform.isReactNative){const t={},[n,r]=(0,i.getUserAgentHeader)();t[n]=r,o&&(t[s.HeaderNames.Authorization]=`Bearer ${o}`),h&&(t[s.HeaderNames.Cookie]=h),l=new this._webSocketConstructor(e,void 0,{headers:{...t,...this._headers}})}else o&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(o)}`);l||(l=new this._webSocketConstructor(e)),t===r.TransferFormat.Binary&&(l.binaryType="arraybuffer"),l.onopen=t=>{this._logger.log(n.LogLevel.Information,`WebSocket connected to ${e}.`),this._webSocket=l,d=!0,a()},l.onerror=e=>{let t=null;t="undefined"!=typeof ErrorEvent&&e instanceof ErrorEvent?e.error:"There was an error with the transport",this._logger.log(n.LogLevel.Information,`(WebSockets transport) ${t}.`)},l.onmessage=e=>{if(this._logger.log(n.LogLevel.Trace,`(WebSockets transport) data received. ${(0,i.getDataDetail)(e.data,this._logMessageContent)}.`),this.onreceive)try{this.onreceive(e.data)}catch(e){return void this._close(e)}},l.onclose=e=>{if(d)this._close(e);else{let t=null;t="undefined"!=typeof ErrorEvent&&e instanceof ErrorEvent?e.error:"WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",c(new Error(t))}}}))}send(e){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(n.LogLevel.Trace,`(WebSockets transport) sending data. ${(0,i.getDataDetail)(e,this._logMessageContent)}.`),this._webSocket.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(e){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(n.LogLevel.Trace,"(WebSockets transport) socket closed."),this.onclose&&(!this._isCloseEvent(e)||!1!==e.wasClean&&1e3===e.code?e instanceof Error?this.onclose(e):this.onclose():this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason||"no reason given"}).`)))}_isCloseEvent(e){return e&&"boolean"==typeof e.wasClean&&"number"==typeof e.code}}},"./node_modules/@microsoft/signalr/dist/esm/XhrHttpClient.js":(e,t,o)=>{o.r(t),o.d(t,{XhrHttpClient:()=>a});var s=o("./node_modules/@microsoft/signalr/dist/esm/Errors.js"),n=o("./node_modules/@microsoft/signalr/dist/esm/HttpClient.js"),r=o("./node_modules/@microsoft/signalr/dist/esm/ILogger.js"),i=o("./node_modules/@microsoft/signalr/dist/esm/Utils.js");class a extends n.HttpClient{constructor(e){super(),this._logger=e}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new s.AbortError):e.method?e.url?new Promise(((t,o)=>{const a=new XMLHttpRequest;a.open(e.method,e.url,!0),a.withCredentials=void 0===e.withCredentials||e.withCredentials,a.setRequestHeader("X-Requested-With","XMLHttpRequest"),""===e.content&&(e.content=void 0),e.content&&((0,i.isArrayBuffer)(e.content)?a.setRequestHeader("Content-Type","application/octet-stream"):a.setRequestHeader("Content-Type","text/plain;charset=UTF-8"));const c=e.headers;c&&Object.keys(c).forEach((e=>{a.setRequestHeader(e,c[e])})),e.responseType&&(a.responseType=e.responseType),e.abortSignal&&(e.abortSignal.onabort=()=>{a.abort(),o(new s.AbortError)}),e.timeout&&(a.timeout=e.timeout),a.onload=()=>{e.abortSignal&&(e.abortSignal.onabort=null),a.status>=200&&a.status<300?t(new n.HttpResponse(a.status,a.statusText,a.response||a.responseText)):o(new s.HttpError(a.response||a.responseText||a.statusText,a.status))},a.onerror=()=>{this._logger.log(r.LogLevel.Warning,`Error from HTTP request. ${a.status}: ${a.statusText}.`),o(new s.HttpError(a.statusText,a.status))},a.ontimeout=()=>{this._logger.log(r.LogLevel.Warning,"Timeout from HTTP request."),o(new s.TimeoutError)},a.send(e.content)})):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}}},"./node_modules/@microsoft/signalr/dist/esm/pkg-version.js":(e,t,o)=>{o.r(t),o.d(t,{VERSION:()=>s});const s="9.0.6"},"./node_modules/compute-scroll-into-view/dist/index.js":(e,t,o)=>{o.r(t),o.d(t,{compute:()=>c});const s=e=>"object"==typeof e&&null!=e&&1===e.nodeType,n=(e,t)=>(!t||"hidden"!==e)&&"visible"!==e&&"clip"!==e,r=(e,t)=>{if(e.clientHeight<e.scrollHeight||e.clientWidth<e.scrollWidth){const o=getComputedStyle(e,null);return n(o.overflowY,t)||n(o.overflowX,t)||(e=>{const t=(e=>{if(!e.ownerDocument||!e.ownerDocument.defaultView)return null;try{return e.ownerDocument.defaultView.frameElement}catch(e){return null}})(e);return!!t&&(t.clientHeight<e.scrollHeight||t.clientWidth<e.scrollWidth)})(e)}return!1},i=(e,t,o,s,n,r,i,a)=>r<e&&i>t||r>e&&i<t?0:r<=e&&a<=o||i>=t&&a>=o?r-e-s:i>t&&a<o||r<e&&a>o?i-t+n:0,a=e=>{const t=e.parentElement;return null==t?e.getRootNode().host||null:t},c=(e,t)=>{var o,n,c,l;if("undefined"==typeof document)return[];const{scrollMode:h,block:d,inline:g,boundary:u,skipOverflowHiddenElements:p}=t,_="function"==typeof u?u:e=>e!==u;if(!s(e))throw new TypeError("Invalid target");const m=document.scrollingElement||document.documentElement,f=[];let v=e;for(;s(v)&&_(v);){if(v=a(v),v===m){f.push(v);break}null!=v&&v===document.body&&r(v)&&!r(document.documentElement)||null!=v&&r(v,p)&&f.push(v)}const b=null!=(n=null==(o=window.visualViewport)?void 0:o.width)?n:innerWidth,y=null!=(l=null==(c=window.visualViewport)?void 0:c.height)?l:innerHeight,{scrollX:w,scrollY:S}=window,{height:C,width:T,top:L,right:E,bottom:k,left:I}=e.getBoundingClientRect(),{top:P,right:H,bottom:M,left:j}=(e=>{const t=window.getComputedStyle(e);return{top:parseFloat(t.scrollMarginTop)||0,right:parseFloat(t.scrollMarginRight)||0,bottom:parseFloat(t.scrollMarginBottom)||0,left:parseFloat(t.scrollMarginLeft)||0}})(e);let R="start"===d||"nearest"===d?L-P:"end"===d?k+M:L+C/2-P+M,$="center"===g?I+T/2-j+H:"end"===g?E+H:I-j;const D=[];for(let e=0;e<f.length;e++){const t=f[e],{height:o,width:s,top:n,right:a,bottom:c,left:l}=t.getBoundingClientRect();if("if-needed"===h&&L>=0&&I>=0&&k<=y&&E<=b&&(t===m&&!r(t)||L>=n&&k<=c&&I>=l&&E<=a))return D;const u=getComputedStyle(t),p=parseInt(u.borderLeftWidth,10),_=parseInt(u.borderTopWidth,10),v=parseInt(u.borderRightWidth,10),P=parseInt(u.borderBottomWidth,10);let H=0,M=0;const j="offsetWidth"in t?t.offsetWidth-t.clientWidth-p-v:0,A="offsetHeight"in t?t.offsetHeight-t.clientHeight-_-P:0,x="offsetWidth"in t?0===t.offsetWidth?0:s/t.offsetWidth:0,N="offsetHeight"in t?0===t.offsetHeight?0:o/t.offsetHeight:0;if(m===t)H="start"===d?R:"end"===d?R-y:"nearest"===d?i(S,S+y,y,_,P,S+R,S+R+C,C):R-y/2,M="start"===g?$:"center"===g?$-b/2:"end"===g?$-b:i(w,w+b,b,p,v,w+$,w+$+T,T),H=Math.max(0,H+S),M=Math.max(0,M+w);else{H="start"===d?R-n-_:"end"===d?R-c+P+A:"nearest"===d?i(n,c,o,_,P+A,R,R+C,C):R-(n+o/2)+A/2,M="start"===g?$-l-p:"center"===g?$-(l+s/2)+j/2:"end"===g?$-a+v+j:i(l,a,s,p,v+j,$,$+T,T);const{scrollLeft:e,scrollTop:r}=t;H=0===N?0:Math.max(0,Math.min(r+H/N,t.scrollHeight-o/N+A)),M=0===x?0:Math.max(0,Math.min(e+M/x,t.scrollWidth-s/x+j)),R+=r-H,$+=e-M}D.push({el:t,top:H,left:M})}return D}},"./node_modules/scroll-into-view-if-needed/dist/index.js":(e,t,o)=>{o.r(t),o.d(t,{default:()=>r});var s=o("./node_modules/compute-scroll-into-view/dist/index.js");const n=e=>!1===e?{block:"end",inline:"nearest"}:(e=>e===Object(e)&&0!==Object.keys(e).length)(e)?e:{block:"start",inline:"nearest"};function r(e,t){if(!e.isConnected||!(e=>{let t=e;for(;t&&t.parentNode;){if(t.parentNode===document)return!0;t=t.parentNode instanceof ShadowRoot?t.parentNode.host:t.parentNode}return!1})(e))return;const o=(e=>{const t=window.getComputedStyle(e);return{top:parseFloat(t.scrollMarginTop)||0,right:parseFloat(t.scrollMarginRight)||0,bottom:parseFloat(t.scrollMarginBottom)||0,left:parseFloat(t.scrollMarginLeft)||0}})(e);if("object"==typeof(r=t)&&"function"==typeof r.behavior)return t.behavior((0,s.compute)(e,t));var r;const i="boolean"==typeof t||null==t?void 0:t.behavior;for(const{el:r,top:a,left:c}of(0,s.compute)(e,n(t))){const e=a-o.top+o.bottom,t=c-o.left+o.right;r.scroll({top:e,left:t,behavior:i})}}},"./node_modules/smooth-scroll-into-view-if-needed/dist/index.js":(e,t,o)=>{o.r(t),o.d(t,{default:()=>c});var s=o("./node_modules/scroll-into-view-if-needed/dist/index.js");let n;const r=()=>(n||(n="performance"in window?performance.now.bind(performance):Date.now),n());function i(e){const t=r(),o=Math.min((t-e.startTime)/e.duration,1),s=e.ease(o),n=e.startX+(e.x-e.startX)*s,a=e.startY+(e.y-e.startY)*s;e.method(n,a,o,s),n!==e.x||a!==e.y?requestAnimationFrame((()=>i(e))):e.cb()}function a(e,t,o){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:600,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:e=>1+--e*e*e*e*e,a=arguments.length>5?arguments[5]:void 0,c=arguments.length>6?arguments[6]:void 0;const l=e,h=e.scrollLeft,d=e.scrollTop;i({scrollable:l,method:(t,o,s,n)=>{const r=Math.ceil(t),i=Math.ceil(o);e.scrollLeft=r,e.scrollTop=i,null==c||c({target:e,elapsed:s,value:n,left:r,top:i})},startTime:r(),startX:h,startY:d,x:t,y:o,duration:s,ease:n,cb:a})}const c=function(e,t){const o=t||{};return(n=o)&&!n.behavior||"smooth"===n.behavior?(0,s.default)(e,{block:o.block,inline:o.inline,scrollMode:o.scrollMode,boundary:o.boundary,skipOverflowHiddenElements:o.skipOverflowHiddenElements,behavior:e=>Promise.all(e.reduce(((e,t)=>{let{el:s,left:n,top:r}=t;const i=s.scrollLeft,c=s.scrollTop;return i===n&&c===r?e:[...e,new Promise((e=>a(s,n,r,o.duration,o.ease,(()=>e({el:s,left:[i,n],top:[c,r]})),o.onScrollChange)))]}),[]))}):Promise.resolve((0,s.default)(e,t));var n}}},t={};function o(s){var n=t[s];if(void 0!==n)return n.exports;var r=t[s]={exports:{}};return e[s](r,r.exports,o),r.exports}o.d=(e,t)=>{for(var s in t)o.o(t,s)&&!o.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var s={};(()=>{o.r(s);var e=o("./node_modules/@microsoft/signalr/dist/esm/HubConnectionBuilder.js"),t=o("./node_modules/@microsoft/signalr/dist/esm/ILogger.js"),n=o("./node_modules/smooth-scroll-into-view-if-needed/dist/index.js");const r=(new e.HubConnectionBuilder).withUrl("/chatHub").configureLogging(t.LogLevel.Error).build();function i(e){const t=document.getElementsByClassName("img-navbar-avatar")[0].getAttribute("src"),o=parseInt(document.getElementById("UserId").value),s=e.id,n=e.querySelector(".name").outerHTML,i=e.querySelector(".img-thumbnail").src;if(o!==parseInt(s)){const e=`private_${s}`;r.invoke("ConnectAsync",t,parseInt(s)),function(e,t,o,s,n,r){var i,a,c;const l=document.getElementById("PriChatDiv"),h=null!==(i=l.dataset.placeholder)&&void 0!==i?i:"Type a message...",d=document.createElement("div");d.id=o,d.className="card direct-chat",d.dataset.toAvatar=n,d.dataset.avatar=r,d.innerHTML=`<div class="card-header"><div class="row justify-content-between align-items-center">\n                          <div class="col-auto"><h3 class="card-title">${s}</h3></div> \n                          <div class="col-auto"><button id="deleteConversation" class="btn btn-danger" type="button"><i class="fas fa-trash"></i></button>  </div></div></div>\n                      <div class="card-body"> <div id="divMessage" class="direct-chat-messages"></div>  </div>\n                      <div class="card-footer">  <div class="input-group mb-0">\n                          <textarea rows="3" id="txtPrivateMessage" name="message" placeholder="${h}" class="form-control"></textarea>\n\t\t\t\t\t\t  <button type="button" id="btnSendMessage" class="btn btn-primary"><i class="fas fa-paper-plane"></i></button>\n                      </div>`,null===(a=d.querySelector("#txtPrivateMessage"))||void 0===a||a.addEventListener("keypress",(e=>{var t;"Enter"===e.key&&e.shiftKey&&(null===(t=d.querySelector("#btnSendMessage"))||void 0===t||t.click())})),l&&(l.replaceChildren(),l.append(d));null===(c=document.getElementById("btnSendMessage"))||void 0===c||c.addEventListener("click",(()=>{const o=d.querySelector("#txtPrivateMessage");if(o){const s=o.value;s.length>0&&(e.invoke("SendPrivateMessageAsync",parseInt(t),s),o.value="")}}))}(r,s,e,n,i,t)}document.getElementById("deleteConversation").addEventListener("click",(()=>{const e=document.querySelector(".chat-list-user.active").id;r.invoke("DeleteConversationAsync",parseInt(e)),location.reload()}))}function a(e,t,o,s,r,i,a){var c;const l=document.createElement("div");l.className=`direct-chat-msg ${s}`,l.innerHTML=`<div class="fs-6 mb-1 clearfix"><span class="text-body-secondary float-${r}">${o}</span>\n                         </div> <img class="direct-chat-img img-thumbnail rounded" src="${a}" alt="Message User Image"> <div class="direct-chat-text ${i}">${t}</div>`;const h=null===(c=document.getElementById(e))||void 0===c?void 0:c.querySelector("#divMessage");null==h||h.append(l),(0,n.default)(l)}r.start().then((()=>{!function(){const e=document.querySelector(".chat-list-user.active");e&&i(e)}()})).catch((e=>{console.error(e.toString())})),r.on("onConnected",((e,t)=>{for(let o=0;o<t.length;o++){const s=`private_${e}`,n=document.getElementById(s),r=n.dataset.avatar;let i=n.dataset.toAvatar;const c=parseInt(document.getElementById("UserId").value);let l="start",h="text-bg-light",d="end";const g=t[o].body,u=t[o].dateTime;c!==t[o].toUserId&&(l="end",h="text-bg-primary",d="start",i=r),a(s,g,u,l,d,h,i)}})),r.on("sendPrivateMessage",((e,t,o,s)=>{const n=`private_${e}`;let r="start",i="text-bg-light",c="end";parseInt(document.getElementById("UserId").value)!==e&&(r="end",i="text-bg-primary",c="start"),a(n,t,s,r,c,i,o)})),document.querySelectorAll(".chat-list-user").forEach((e=>{e.addEventListener("click",(()=>{const t=document.querySelector(".chat-list .active");t&&t.classList.remove("active");const o=e;o.classList.add("active"),i(o)}))}))})()})();
//# sourceMappingURL=messages.min.js.map